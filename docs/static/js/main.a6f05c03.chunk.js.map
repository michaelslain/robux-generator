{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","wasButtonClicked","setWasButtonClicked","usernameText","setUsernameText","name","link","href","food","setFood","scale","setScale","value","setValue","variants1","initial","width","visible","variants2","opacity","variants3","display","variants4","className","substr","toUpperCase","length","target","src","onChange","e","placeholder","min","max","type","button","animate","variants","onClick","setTimeout","div","transition","duration","p","delay","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6f05c03.chunk.js","sourcesContent":["import react, { useState, useEffect, useRef } from 'react';\nimport { animate, motion } from 'framer-motion';\nimport './App.css';\n\nfunction App() {\n  const [wasButtonClicked, setWasButtonClicked] = useState(false);\n  const time = 240;\n  const [usernameText, setUsernameText] = useState();\n  const name = usernameText == null || usernameText == '' ? 'User' : usernameText;\n  const link = usernameText == null || usernameText == '' ? 'http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=baconhairnormal' : 'http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username='+name;\n  const href = usernameText == null || usernameText == '' ? '#' : 'https://www.roblox.com/search/users?keyword='+name;\n  const [food, setFood] = useState();\n  const [scale, setScale] = useState(false);\n  const [value, setValue] = useState(1);\n  const minRobux = 1;\n  const maxRobux = 1000;\n\n  const variants1 = {\n    initial: { width: '0%' },\n    visible: { \n      width: wasButtonClicked === false ? '0%' : '100%'\n    }\n  }\n\n  const variants2 = {\n    initial: { opacity: 0 },\n    visible: wasButtonClicked === false ? { opacity: 0 } :  { opacity: 1 }\n\n  }\n\n  const variants3 = {\n    initial: { display: 'none' },\n    visible: wasButtonClicked === false ? { display: 'none' } :  { display: 'block' }\n\n  }\n\n  const variants4 = {\n    visible: {\n      scale: scale === true ? 1.1 : 1\n    }\n  }\n\n  function setButton () {\n    setWasButtonClicked(true);\n    setScale(true);\n\n    setTimeout(()=>{\n      setScale(false);\n    }, 200);\n  }\n\n  function changeUsername (e) {\n    if (wasButtonClicked === false) {\n      setUsernameText(e.target.value)\n    }\n  }\n\n  function changeFood (e) {\n    if (wasButtonClicked === false) {\n      setFood(e.target.value)\n    }\n  }\n\n  function changeRobux (e) {\n    if (wasButtonClicked === false) {\n      setValue(e.target.value)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"popup\" >\n        <h1>Hello {name.substr(0, 1).toUpperCase()+name.substr(1, name.length)}!</h1>\n        <a href={href} target=\"/\" ><img className=\"pfp\" src={link} /></a>\n        <textarea value={usernameText} onChange={changeUsername} placeholder=\"Username(not required)\" ></textarea>\n        <textarea value={food} onChange={changeFood} placeholder=\"favorite food(required)\" ></textarea>\n        <input className=\"robux-amount\" min={minRobux} max={maxRobux} value={value} onChange={changeRobux} type=\"range\" ></input>\n        <div className=\"robux-amount-text-container\" >\n          <p className=\"robux-amount-text\" >{value}</p>\n          <img className=\"robux-icon\" src=\"https://www.seekpng.com/png/full/64-640936_roblox-hack-generator-roblox-robux-logo.png\" />\n        </div>\n        <motion.button initial=\"initial\" animate=\"visible\" variants={variants4} onClick={setButton} >Give Robux</motion.button>\n\n        <motion.div \n        initial=\"initial\"\n        animate=\"visible\"\n        variants={variants2}\n        className=\"loading-bar-container\" >\n          <motion.div \n          initial=\"initial\"\n          animate=\"visible\"\n          transition={{duration: time }}\n          variants={variants1}\n          className=\"loading-bar\" >\n          </motion.div>\n        </motion.div>\n\n        <motion.p \n        initial=\"initial\" \n        animate=\"visible\" \n        transition={{delay: time}}\n        variants={variants3} \n        className=\"try-again-text\" onClick={()=>{window.location.reload()}} >Error, Try Again later</motion.p>\n\n        <motion.button \n        initial=\"initial\" \n        animate=\"visible\" \n        transition={{delay: time}}\n        variants={variants3} \n        className=\"try-again-button\" onClick={()=>{window.location.reload()}} >Try Again</motion.button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}